name: Build CI

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: gradle
      - name: get-cmake
        uses: lukka/get-cmake@v.3.23.2
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: |
          mkdir tempDir
          cd tempDir
          git clone https://github.com/Hicores/QTool
          cd QTool
          export CommitNumber=`git rev-list --count main`
          echo $CommitNumber
          cd ../..
          echo ${{ secrets.SIGN_KEY }} | base64 -d > key.jks
          git submodule update --init --recursive
          echo $CommitNumber
          ./gradlew :QTool:assembleRelease
        env:
          KEYSTORE_PATH: "../key.jks"
          KEYSTORE_PASSWORD: ${{ secrets.SIGN_PASS }}
          KEY_ALIAS: ${{ secrets.SIGN_ALIAS }}
          KEY_PASSWORD: ${{ secrets.ALIA_PASS }}
      - name: Write Commit Message To File
        run: |
          cat << ENDOFCOMMIT > ./QTool/build/outputs/apk/release/Commit信息.txt
          ${{ github.event.head_commit.message }}
          ENDOFCOMMIT
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        if: ${{ !github.event.pull_request }}
        with:
          path: 'QTool/build/outputs/apk/release/*.*'
          name: QTool_CIBuild

  upload-to-telegram:
    name: Upload Telegram
    if: ${{ success() && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    needs:
      - build
      - telegram-bot-api
    steps:
      - name: Donwload Artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Download Telegram Bot API Binary
        uses: actions/download-artifact@master
        with:
          name: telegram-bot-api-binary
          path: .
      - name: Release
        env:
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          COMMIT_URL: ${{ github.event.head_commit.url }}
        run: |
          ESCAPED=`python3 -c 'import json,os,urllib.parse; msg = json.dumps(os.environ["COMMIT_MESSAGE"]); print(urllib.parse.quote(msg if len(msg) <= 1024 else json.dumps(os.environ["COMMIT_URL"])))'`
          chmod +x telegram-bot-api-binary
          export qtool=$(find artifacts -name "QTool_*.apk")
          ./telegram-bot-api-binary --api-id=${{ secrets.TG_API_ID }} --api-hash=${{ secrets.TG_API_HASH }} --local 2>&1 > /dev/null &
          curl -v "http://127.0.0.1:8081/bot${{ secrets.TG_BOT_TOKEN  }}/sendMediaGroup?disable_notification=true&chat_id=-1001722417051&media=%5B%7B%22type%22%3A%22document%22%2C%20%22media%22%3A%22attach%3A%2F%2Fqtool%22%2C%22caption%22:${ESCAPED}%7D%5D" \
            -F qtool="@$qtool"
          pkill telegram-bot
  telegram-bot-api:
    name: Telegram Bot API
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Clone Telegram Bot API
        run: |
          git clone --recursive https://github.com/tdlib/telegram-bot-api.git
          git status telegram-bot-api >> telegram-bot-api-status
      - name: Cache Bot API Binary
        id: cache-bot-api
        uses: actions/cache@v2
        with:
          path: telegram-bot-api-binary
          key: CI-telegram-bot-api-${{ hashFiles('telegram-bot-api-status') }}
      - name: Compile Telegram Bot API
        if: steps.cache-bot-api.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install make git zlib1g-dev libssl-dev gperf cmake g++
          cd telegram-bot-api
          rm -rf build
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX:PATH=.. ..
          cmake --build . --target install -j$(nproc)
          cd ../..
          ls -l telegram-bot-api/bin/telegram-bot-api*
          cp telegram-bot-api/bin/telegram-bot-api telegram-bot-api-binary
      - name: Upload Binary
        uses: actions/upload-artifact@master
        with:
          name: telegram-bot-api-binary
          path: telegram-bot-api-binary

#  upload-to-server:
#    name: Upload Server
#    if: ${{ success() && github.ref == 'refs/heads/main' }}
#    runs-on: ubuntu-latest
#    needs:
#      - build
#    steps:
#      - name: Donwload Artifacts
#        uses: actions/download-artifact@v2
#        with:
#          path: artifacts
#      - name: mkd
#        uses: fifsky/ssh-action@master
#        with:
#          command: |
#            mkdir /Store/Link/Down/CIDL/v${{ github.run_number }}/
#          host: ${{ secrets.SERVER_IP }}
#          user: ${{ secrets.SERVER_USERNAME }}
#          port: 22
#          pass: ${{ secrets.SERVER_PASSWORD }}
#      - name: CopyReleaseInfo
#        run: |
#          mkdir QTool
#          ls artifacts -l
#          mv artifacts/QTool-v${{ github.run_number }}/QTool-v${{ github.run_number }}.apk QTool/QTool-release.apk
#      - name: Remote SSH Pusblish
#        uses: nerd4ever/ssh-action@master
#        with:
#          from: ./QTool/*.*
#          to: /Store/Link/Down/CIDL/v${{ github.run_number }}/
#          sync: local
#          host: ${{ secrets.SERVER_IP }}
#          user: ${{ secrets.SERVER_USERNAME }}
#          port: 22
#          pass: ${{ secrets.SERVER_PASSWORD }}
